{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","services/login.js","App.js","index.js"],"names":["Note","note","toggledImportance","deleteNote","label","important","content","onClick","token","getAll","request","axios","get","err","console","log","then","res","data","create","newObject","a","config","headers","Authorization","post","response","id","delete","update","put","setToken","newToken","Notification","message","className","login","credentials","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notify","setNotify","username","setUsername","password","setPassword","user","setUser","showLogin","setShowLogin","useEffect","noteService","initialNotes","catch","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","concat","error","setTimeout","notesToShow","filter","handleNoteChange","target","value","handleLogin","e","loginService","setItem","stringify","onSubmit","type","name","onChange","map","key","find","n","changedNote","toggleImportanceOf","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"0QAgBeA,EAdF,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,WACjCC,EAAQH,EAAKI,UAAY,qBAAuB,iBAEtD,OACE,6BACE,4BACGJ,EAAKK,QACN,4BAAQC,QAASL,GAAoBE,GACrC,4BAAQG,QAASJ,GAAjB,a,wBCPJK,EAAQ,KAmCG,GACbC,OA9Ba,WACb,IAAIC,EACJ,IACEA,EAAUC,IAAMC,IAXJ,cAab,MAAOC,GACNC,QAAQC,IAAIF,GAEd,OAAOH,EAAQM,MAAK,SAACC,GAAD,OAASA,EAAIC,SAuBjCC,OApBU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAACC,cAAehB,IAFd,SAIUG,IAAMc,KAvBf,aAuB6BL,EAAWE,GAJzC,cAIPI,EAJO,yBAKNA,EAASR,MALH,2CAAH,sDAqBVf,WAbiB,SAAAwB,GAEf,OADgBhB,IAAMiB,OAAN,UA5BJ,aA4BI,YAA2BD,IAC5BX,MAAK,iBAAM,sBAY5Ba,OATa,SAACF,EAAIP,GAElB,OADgBT,IAAMmB,IAAN,UAjCF,aAiCE,YAAwBH,GAAMP,GAC/BJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAQjCa,SAtCe,SAAAC,GACbxB,EAAK,iBAAawB,KCGPC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAEF,yBAAKC,UAAU,SAASD,ICElB,GAACE,MALL,uCAAG,WAAMC,GAAN,eAAAhB,EAAA,sEACaV,IAAMc,KAHjB,aAG+BY,GADjC,cACJX,EADI,yBAEHA,EAASR,MAFN,2CAAH,uDCqLIoB,EAjLH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIYN,mBAAS,MAJrB,mBAITO,EAJS,KAIDC,EAJC,OAKgBR,mBAAS,IALzB,mBAKTS,EALS,KAKCC,EALD,OAMgBV,mBAAS,IANzB,mBAMTW,EANS,KAMCC,EAND,OAOQZ,mBAAS,MAPjB,mBAOTa,EAPS,KAOHC,EAPG,OAQkBd,oBAAS,GAR3B,mBAQTe,EARS,KAQEC,EARF,KAUhBC,qBAAU,WACRC,EACGhD,SACAO,MAAK,SAAC0C,GACLjB,EAASiB,MAEVC,OAAM,SAAC9C,GACNC,QAAQC,IAAIF,QAEf,IAEH2C,qBAAU,WACR,IAAMI,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMR,EAAOY,KAAKC,MAAML,GACxBP,EAAQD,GACRK,EAAY1B,SAASqB,EAAK5C,UAE3B,IAEH,IAAM0D,EAAU,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB/D,QAASoC,EACT4B,MAAM,IAAIC,MAAOC,cACjBnE,UAAWoE,KAAKC,SAAW,IAG7BjB,EACGtC,OAAOkD,GACPrD,MAAK,SAAC2D,GACLlC,EAASD,EAAMoC,OAAOD,IACtBhC,EAAW,IACX7B,QAAQC,IAAI,UAAW4D,MAExBhB,OAAM,SAAC9C,GACNC,QAAQC,IAAI,mBAAoBF,EAAIa,SAASR,KAAK2D,OAClD9B,EAAUlC,EAAIa,SAASR,KAAK2D,OAC5BC,YAAW,WACT/B,EAAU,QACT,SAIHgC,EAAcnC,EAAUJ,EAAQA,EAAMwC,QAAO,SAAC/E,GAAD,OAAUA,EAAKI,aAE5D4E,EAAmB,SAACd,GACxBxB,EAAWwB,EAAMe,OAAOC,QA4BpBC,EAAW,uCAAG,WAAOC,GAAP,eAAAhE,EAAA,6DAClBgE,EAAEjB,iBADgB,kBAIGkB,EAAalD,MAAM,CAAEY,WAAUE,aAJlC,OAIVE,EAJU,OAKhBS,OAAOC,aAAayB,QAAQ,oBAAqBvB,KAAKwB,UAAUpC,IAChEK,EAAY1B,SAASqB,EAAK5C,OAC1B6C,EAAQD,GACRH,EAAY,IACZE,EAAY,IATI,kDAWhBJ,EAAU,qBACV+B,YAAW,WACT/B,EAAU,QACT,KAda,0DAAH,sDA4DjB,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcb,QAASY,IAEb,OAATM,EA9CCE,EAEA,0BAAMmC,SAAUL,GACd,sCACA,wCAEE,2BACEM,KAAK,OACLP,MAAOnC,EACP2C,KAAK,WACLC,SAAU,gBAAGV,EAAH,EAAGA,OAAH,OAAgBjC,EAAYiC,EAAOC,WAGjD,wCAEE,2BACEO,KAAK,WACLP,MAAOjC,EACPyC,KAAK,WACLC,SAAU,gBAAGV,EAAH,EAAGA,OAAH,OAAgB/B,EAAY+B,EAAOC,WAGjD,4BAAQO,KAAK,UAAb,SACA,4BAAQA,KAAK,SAASnF,QAAS,kBAAMgD,GAAcD,KAAnD,WAMG,4BAAQ/C,QAAS,kBAAMgD,GAAcD,KAArC,UAoBL,6BACE,2BAAIF,EAAKuC,KAAT,cADF,IAfJ,0BAAMF,SAAUvB,GACd,2BAAOiB,MAAOzC,EAASkD,SAAUX,IACjC,4BAAQS,KAAK,UAAb,QACA,4BAAQA,KAAK,SAASnF,QAAS,kBAAMgD,GAAcD,QAiBnD,6BACE,4BAAQ/C,QAAS,kBAAMsC,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGmC,EAAYc,KAAI,SAAC5F,GAAD,OACf,kBAAC,EAAD,CACE6F,IAAK7F,EAAK0B,GACV1B,KAAMA,EACNC,kBAAmB,kBA5GF,SAACyB,GAC1B,IAAM1B,EAAOuC,EAAMuD,MAAK,SAACC,GAAD,OAAOA,EAAErE,KAAOA,KAClCsE,EAAW,2BAAQhG,GAAR,IAAcI,WAAYJ,EAAKI,YAEhDoD,EACG5B,OAAOF,EAAIsE,GACXjF,MAAK,SAAC2D,GACLlC,EAASD,EAAMqD,KAAI,SAAC5F,GAAD,OAAWA,EAAK0B,KAAOA,EAAK1B,EAAO0E,SAEvDhB,OAAM,WACLZ,EAAU,UAAD,OAAYkD,EAAY3F,QAAxB,+BACTwE,YAAW,WACT/B,EAAU,QACT,KACHN,EAASD,EAAMwC,QAAO,SAACgB,GAAD,OAAOA,EAAErE,KAAOA,SA8FTuE,CAAmBjG,EAAK0B,KACjDxB,WAAY,SAACkF,GAAD,OA3FD,SAACA,EAAG1D,GACvB0D,EAAEjB,iBACFX,EAAYtD,WAAWwB,GAAIX,MAAK,SAACkB,GAC/BpB,QAAQC,IAAImB,MAwFaiE,CAAad,EAAGpF,EAAK0B,aC3KpDyE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4f108603.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggledImportance, deleteNote }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n\r\n  return (\r\n    <div>\r\n      <li>\r\n        {note.content}\r\n        <button onClick={toggledImportance}>{label}</button>\r\n        <button onClick={deleteNote}>Delete</button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  let request\r\n  try {\r\n    request = axios.get(baseUrl);\r\n\r\n  }catch (err) {\r\n    console.log(err);\r\n  }\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: {Authorization: token},\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n};\r\n\r\nconst deleteNote = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(() => \"Note deleted...\")\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((res) => res.data)\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deleteNote,\r\n  update,\r\n  setToken\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default {login}","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport './App.css'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [notify, setNotify] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [showLogin, setShowLogin] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((initialNotes) => {\n        setNotes(initialNotes)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then((returnedNote) => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n        console.log('success', returnedNote)\n      })\n      .catch((err) => {\n        console.log('Error Occurred: ', err.response.data.error)\n        setNotify(err.response.data.error)\n        setTimeout(() => {\n          setNotify(null)\n        }, 5000)\n      })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important)\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      })\n      .catch(() => {\n        setNotify(`Note: \\\"${changedNote.content}\\\" has already been deleted`)\n        setTimeout(() => {\n          setNotify(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n  }\n\n  const handleDelete = (e, id) => {\n    e.preventDefault()\n    noteService.deleteNote(id).then((message) => {\n      console.log(message)\n    })\n  }\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (err) {\n      setNotify('Wrong Credentials')\n      setTimeout(() => {\n        setNotify(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => {\n    if (showLogin) {\n      return (\n        <form onSubmit={handleLogin}>\n          <h2>Log in</h2>\n          <div>\n            username\n            <input\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button type=\"submit\">login</button>\n          <button type=\"button\" onClick={() => setShowLogin(!showLogin)}>\n            Cancel\n          </button>\n        </form>\n      )\n    } else {\n      return <button onClick={() => setShowLogin(!showLogin)}>Log in</button>\n    }\n  }\n\n  const noteForm = () => (\n    <form onSubmit={addNote}>\n      <input value={newNote} onChange={handleNoteChange} />\n      <button type=\"submit\">save</button>\n      <button type=\"button\" onClick={() => setShowLogin(!showLogin)}></button>\n    </form>\n  )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={notify} />\n\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged in</p> {noteForm()}\n        </div>\n      )}\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggledImportance={() => toggleImportanceOf(note.id)}\n            deleteNote={(e) => handleDelete(e, note.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}