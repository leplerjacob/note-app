{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggledImportance","deleteNote","label","important","content","onClick","axios","get","then","res","data","newObject","post","id","delete","put","Notification","message","className","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notify","setNotify","useEffect","noteService","initialNotes","catch","err","console","log","notesToShow","filter","map","key","find","n","changedNote","returnedNote","setTimeout","toggleImportanceOf","e","preventDefault","handleDelete","onSubmit","event","noteObject","date","Date","toISOString","Math","random","concat","response","error","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84c729dd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggledImportance, deleteNote }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n\r\n  return (\r\n    <div>\r\n      <li>\r\n        {note.content}\r\n        <button onClick={toggledImportance}>{label}</button>\r\n        <button onClick={deleteNote}>Delete</button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst deleteNote = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(() => \"Note deleted...\")\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((res) => res.data)\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deleteNote,\r\n  update,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport \"./App.css\";\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [notify, setNotify] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((initialNotes) => {\n        setNotes(initialNotes);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService\n      .create(noteObject)\n      .then((returnedNote) => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote(\"\");\n        console.log(\"success\", returnedNote);\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err.response.data.error);\n        setNotify(err.response.data.error)\n        setTimeout(()=>{\n          setNotify(null)\n        }, 5000)\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch(() => {\n        setNotify(\n          `Note: \\\"${changedNote.content}\\\" has already been deleted`\n        );\n        setTimeout(() => {\n          setNotify(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    noteService.deleteNote(id).then((message) => {\n      console.log(message);\n    });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={notify} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggledImportance={() => toggleImportanceOf(note.id)}\n            deleteNote={(e) => handleDelete(e, note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}