{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","services/login.js","components/Togglable.js","components/Login.js","components/NoteForm.js","App.js","index.js"],"names":["Note","note","toggledImportance","deleteNote","label","important","content","onClick","token","getAll","request","axios","get","err","console","log","then","res","data","create","newObject","a","config","headers","Authorization","post","response","id","delete","update","put","setToken","newToken","Notification","message","className","login","credentials","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","NoteForm","createNote","newNote","setNewNote","e","preventDefault","date","Date","toISOString","Math","random","target","App","notes","setNotes","showAll","setShowAll","notify","setNotify","setUsername","setPassword","user","setUser","noteFormRef","useRef","current","useEffect","noteService","initialNotes","catch","setTimeout","window","localStorage","clear","loggedUserJSON","getItem","JSON","parse","notesToShow","filter","handleLogin","loginService","setItem","stringify","Login","name","noteObject","returnedNote","concat","error","map","key","find","n","changedNote","toggleImportanceOf","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac306a22.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggledImportance, deleteNote }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n\r\n  return (\r\n    <div>\r\n      <li>\r\n        {note.content}\r\n        <button onClick={toggledImportance}>{label}</button>\r\n        <button onClick={deleteNote}>Delete</button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  let request\r\n  try {\r\n    request = axios.get(baseUrl);\r\n\r\n  }catch (err) {\r\n    console.log(err);\r\n  }\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: {Authorization: token},\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n};\r\n\r\nconst deleteNote = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(() => \"Note deleted...\")\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((res) => res.data)\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deleteNote,\r\n  update,\r\n  setToken\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default {login}","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  username,\r\n  password,\r\n}) => {\r\n    \r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input value={username} onChange={handleUsernameChange} />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useState } from 'react'\r\n\r\nconst NoteForm = ({ createNote }) => {\r\n  const [newNote, setNewNote] = useState('')\r\n\r\n  const handleChange = ({ target }) => {\r\n    setNewNote(target.value)\r\n  }\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault()\r\n\r\n    createNote({\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    })\r\n\r\n    setNewNote('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new note</h2>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteForm\r\n","import React, { useState, useEffect, useRef } from 'react'\nimport Note from './components/Note'\nimport './App.css'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport loginService from './services/login'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/Login'\nimport NoteForm from './components/NoteForm'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [notify, setNotify] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const noteFormRef = useRef()\n\n  console.log(\"noteFormRef: \", noteFormRef, \".current:\", noteFormRef.current);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((initialNotes) => {\n        setNotes(initialNotes)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    setTimeout(() => {\n      window.localStorage.clear()\n    }, 10000)\n  }, [])\n  \n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  \n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService\n      .create(noteObject)\n      .then((returnedNote) => {\n        setNotes(notes.concat(returnedNote))\n        console.log('success', returnedNote)\n      })\n      .catch((err) => {\n        console.log('Error Occurred: ', err.response.data.error)\n        setNotify(err.response.data.error)\n        setTimeout(() => {\n          setNotify(null)\n        }, 5000)\n      })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important)\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      })\n      .catch(() => {\n        setNotify(`Note: \\\"${changedNote.content}\\\" has already been deleted`)\n        setTimeout(() => {\n          setNotify(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n  }\n\n  const handleDelete = (e, id) => {\n    e.preventDefault()\n    noteService.deleteNote(id).then((message) => {\n      console.log(message)\n    })\n  }\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (err) {\n      setNotify('Wrong Credentials')\n      setTimeout(() => {\n        setNotify(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel=\"login\">\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={notify} />\n\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged in</p>\n          <Togglable buttonLabel={'new note'} ref={noteFormRef} >\n            <NoteForm createNote={addNote} />\n          </Togglable>\n        </div>\n      )}\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggledImportance={() => toggleImportanceOf(note.id)}\n            deleteNote={(e) => handleDelete(e, note.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}