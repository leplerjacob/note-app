{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggledImportance","deleteNote","label","important","content","onClick","axios","get","then","res","data","newObject","post","id","delete","put","Notification","message","className","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notify","setNotify","username","setUsername","password","setPassword","useEffect","noteService","initialNotes","catch","err","console","log","notesToShow","filter","onSubmit","e","preventDefault","type","value","name","onChange","target","map","key","find","n","changedNote","returnedNote","setTimeout","toggleImportanceOf","handleDelete","event","noteObject","date","Date","toISOString","Math","random","concat","response","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d719f603.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggledImportance, deleteNote }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n\r\n  return (\r\n    <div>\r\n      <li>\r\n        {note.content}\r\n        <button onClick={toggledImportance}>{label}</button>\r\n        <button onClick={deleteNote}>Delete</button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst deleteNote = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(() => \"Note deleted...\")\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((res) => res.data)\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deleteNote,\r\n  update,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport './App.css'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [notify, setNotify] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((initialNotes) => {\n        setNotes(initialNotes)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then((returnedNote) => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n        console.log('success', returnedNote)\n      })\n      .catch((err) => {\n        console.log('Error Occurred: ', err.response.data.error)\n        setNotify(err.response.data.error)\n        setTimeout(() => {\n          setNotify(null)\n        }, 5000)\n      })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important)\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      })\n      .catch(() => {\n        setNotify(`Note: \\\"${changedNote.content}\\\" has already been deleted`)\n        setTimeout(() => {\n          setNotify(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n  }\n\n  const handleDelete = (e, id) => {\n    e.preventDefault()\n    noteService.deleteNote(id).then((message) => {\n      console.log(message)\n    })\n  }\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    console.log(\n      `loggin in with username: ${username}, and password: ${password}`\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={notify} />\n\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggledImportance={() => toggleImportanceOf(note.id)}\n            deleteNote={(e) => handleDelete(e, note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}